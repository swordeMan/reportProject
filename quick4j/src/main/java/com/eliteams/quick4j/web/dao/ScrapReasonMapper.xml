<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eliteams.quick4j.web.dao.ScrapReasonMapper" >
  <resultMap id="BaseResultMap" type="com.eliteams.quick4j.web.model.ScrapReason" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="material_name" property="materialName" jdbcType="VARCHAR" />
    <result column="s_reason" property="sReason" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from scrap_reason
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.eliteams.quick4j.web.model.ScrapReason" >
    insert into scrap_reason (id, material_name, s_reason
      )
    values (#{id,jdbcType=BIGINT}, #{materialName,jdbcType=VARCHAR}, #{sReason,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.eliteams.quick4j.web.model.ScrapReason" >
    update scrap_reason
    set material_name = #{materialName,jdbcType=VARCHAR},
      s_reason = #{sReason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, material_name, s_reason
    from scrap_reason
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, material_name, s_reason
    from scrap_reason
  </select>
  <select id="selectByMaterialName" resultMap="BaseResultMap" parameterType="java.lang.String">
  	select * from scrap_reason where material_name = #{materialName,jdbcType=VARCHAR}
  </select>
  <select id="getScrapReasonByPage" resultMap="BaseResultMap" parameterType="com.eliteams.quick4j.core.feature.orm.mybatis.Page" >
    SELECT * FROM scrap_reason ORDER BY id DESC
  </select>
   <select id="getScrapReasonByPageAndKeywords" resultMap="BaseResultMap" parameterType="map" >
    SELECT * FROM scrap_reason  where 1=1
    	<if test="keywords != null and keywords !='' ">
				AND (
					material_name LIKE "%"#{keywords}"%"
					or s_reason   LIKE "%"#{keywords}"%"
					)
   		</if>
   <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>